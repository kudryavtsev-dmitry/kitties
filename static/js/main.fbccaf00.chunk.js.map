{"version":3,"sources":["components/Main/Main.module.scss","components/Card/Card.module.scss","components/Main/LikedButton/LikedButton.module.scss","components/Card/CardActions/CardActions.tsx","components/Card/Card.tsx","stores/cats/cats.ts","components/Main/LikedButton/LikedButton.tsx","components/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Card/CardActions/CardActions.module.scss"],"names":["module","exports","CardActions","memo","onLike","onDelete","liked","className","styles","actions","DeleteOutlined","icon","onClick","HeartFilled","likeIcon","HeartOutlined","Card","url","id","handleLike","useCallback","handleDelete","container","photo","src","alt","title","catsStore","_cats","_likedCats","isLoading","likeCat","includes","filter","el","deleteCat","cats","cat","fetchCats","a","axios","get","process","params","limit","headers","data","runInAction","map","makeAutoObservable","this","LikedButton","likedToggle","selectLiked","classnames","active","Main","observer","likedCats","useState","setLikedToggle","filteredCats","useMemo","useEffect","handleSelectLiked","v","handleLikeCat","handleDeleteCat","loading","LoadingOutlined","wrapper","topBar","cardsContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,OAAS,qBAAqB,eAAiB,6BAA6B,QAAU,wB,mBCAxID,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,MAAQ,sB,mBCA1FD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,OAAS,8B,gMCSjDC,EAAcC,gBACzB,YAAmD,IAAhDC,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MACnB,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,cAACC,EAAA,EAAD,CAAgBH,UAAWC,IAAOG,KAAMC,QAASP,IAChDC,EACC,cAACO,EAAA,EAAD,CAAaN,UAAWC,IAAOM,SAAUF,QAASR,IAElD,cAACW,EAAA,EAAD,CAAeR,UAAWC,IAAOG,KAAMC,QAASR,UCN7CY,EAAOb,gBAClB,YAAkE,IAA/Dc,EAA8D,EAA9DA,IAAKX,EAAyD,EAAzDA,MAAOF,EAAkD,EAAlDA,OAAQc,EAA0C,EAA1CA,GAAIb,EAAsC,EAAtCA,SACnBc,EAAaC,uBAAY,WAC7BhB,EAAOc,KACN,CAACA,EAAId,IAEFiB,EAAeD,uBAAY,WAC/Bf,EAASa,KACR,CAACA,EAAIb,IAER,OACE,sBAAKE,UAAWC,IAAOc,UAAvB,UACE,qBAAKf,UAAWC,IAAOe,MAAvB,SACE,qBAAKC,IAAKP,EAAKQ,IAAI,UAErB,sBAAKlB,UAAWC,IAAOkB,MAAvB,+DAA8CR,KAC9C,cAAChB,EAAD,CACEI,MAAOA,EACPD,SAAUgB,EACVjB,OAAQe,U,yEC0BLQ,EAAY,I,WA1CvB,aAAe,IAAD,gCANNC,MAAe,GAMT,KAJNC,WAAuB,GAIjB,KAFdC,WAAY,EAEE,KAWdC,QAAU,SAACb,GACL,EAAKW,WAAWG,SAASd,GAC3B,EAAKW,WAAa,EAAKA,WAAWI,QAAO,SAACC,GAAD,OAAQA,IAAOhB,KAExD,EAAKW,WAAL,sBAAsB,EAAKA,YAA3B,CAAuCX,KAf7B,KAmBdiB,UAAY,SAACjB,GACX,EAAKU,MAAQ,EAAKQ,KAAKH,QAAO,SAACI,GAAD,OAASA,EAAInB,KAAOA,MApBtC,KAuBdoB,UAvBc,sBAuBF,8BAAAC,EAAA,6DACV,EAAKT,WAAY,EADP,SAEaU,IAAMC,IAAN,UAAaC,8CAAmC,CACrEC,OAAQ,CACNC,MAAO,GAETC,QAAS,CACP,YAAY,GAAZ,OAAgBH,2CAPV,iBAEFI,EAFE,EAEFA,OASNC,aAAY,WACV,EAAKjB,WAAY,EACjB,EAAKF,MAAQkB,EAAKE,KAAI,SAACd,GAAD,MAAc,CAAEjB,IAAKiB,EAAGjB,IAAKC,GAAIgB,EAAGhB,UAbpD,2CAtBV+B,YAAmBC,M,sCAGrB,WACE,OAAOA,KAAKtB,Q,qBAEd,WACE,OAAOsB,KAAKrB,e,+CCdHsB,EAAchD,gBACzB,YAAoD,IAAjDiD,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,YACd,OACE,qBACE9C,UAAW+C,IAAW9C,IAAOF,MAAR,eAAkBE,IAAO+C,OAASH,IACvDxC,QAASyC,EAFX,yK,iBCJOG,EAAOC,aAAS,WAC3B,IAAQnB,EACNX,EADMW,UAAWF,EACjBT,EADiBS,KAAML,EACvBJ,EADuBI,QAAS2B,EAChC/B,EADgC+B,UAAWvB,EAC3CR,EAD2CQ,UAAWL,EACtDH,EADsDG,UAGxD,EAAsC6B,oBAAS,GAA/C,mBAAOP,EAAP,KAAoBQ,EAApB,KAEMC,EAAeC,mBAAQ,WAC3B,OAAOV,EAAchB,EAAKH,QAAO,SAACI,GAAD,OAASqB,EAAU1B,SAASK,EAAInB,OAAOkB,IACvE,CAACA,EAAMsB,EAAWN,IAErBW,qBAAU,WACRzB,MACC,CAACA,IAEJ,IAAM0B,EAAoB5C,uBAAY,WACpCwC,GAAe,SAACK,GAAD,OAAQA,OACtB,IAEGC,EAAgB9C,uBACpB,SAACF,GACCa,EAAQb,KAEV,CAACa,IAGGoC,EAAkB/C,uBACtB,SAACF,GACCiB,EAAUjB,KAEZ,CAACiB,IAGH,OAAIL,EAEA,qBAAKvB,UAAWC,IAAO4D,QAAvB,SACE,cAACC,EAAA,EAAD,MAMJ,sBAAK9D,UAAWC,IAAO8D,QAAvB,UACE,qBAAK/D,UAAWC,IAAO+D,OAAvB,SACE,cAACpB,EAAD,CACEC,YAAaA,EACbC,YAAaW,MAGjB,qBAAKzD,UAAWC,IAAOgE,eAAvB,SACGX,EAAab,KAAI,SAACX,GAAD,OAChB,cAACrB,EAAD,CAEEC,IAAKoB,EAAIpB,IACTC,GAAImB,EAAInB,GACRZ,MAAOoD,EAAU1B,SAASK,EAAInB,IAC9Bd,OAAQ8D,EACR7D,SAAU8D,GALL9B,EAAInB,eCpDNuD,MAJf,WACE,OAAO,cAACjB,EAAD,KCUMkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA1E,EAAOC,QAAU,CAAC,QAAU,6BAA6B,SAAW,8BAA8B,KAAO,6B","file":"static/js/main.fbccaf00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__3dfG9\",\"topBar\":\"Main_topBar__3ojP0\",\"cardsContainer\":\"Main_cardsContainer__1JpNJ\",\"loading\":\"Main_loading__PfvY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2U80V\",\"title\":\"Card_title__Ip0in\",\"photo\":\"Card_photo__19CMf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liked\":\"LikedButton_liked__sn80L\",\"active\":\"LikedButton_active__g-qx2\"};","import { DeleteOutlined, HeartFilled, HeartOutlined } from '@ant-design/icons'\nimport React, { memo } from 'react'\nimport styles from './CardActions.module.scss'\n\ntype CardActionsType = {\n  liked: boolean\n  onDelete: () => void\n  onLike: () => void\n}\n\nexport const CardActions = memo(\n  ({ onLike, onDelete, liked }: CardActionsType) => {\n    return (\n      <div className={styles.actions}>\n        <DeleteOutlined className={styles.icon} onClick={onDelete} />\n        {liked ? (\n          <HeartFilled className={styles.likeIcon} onClick={onLike} />\n        ) : (\n          <HeartOutlined className={styles.icon} onClick={onLike} />\n        )}\n      </div>\n    )\n  }\n)\n","import React, { memo, useCallback } from 'react'\nimport styles from './Card.module.scss'\nimport { CardActions } from './CardActions'\n\ntype CardType = {\n  url: string\n  id: string\n  liked: boolean\n  onLike: (id: string) => void\n  onDelete: (id: string) => void\n}\n\nexport const Card = memo(\n  ({ url, liked, onLike, id, onDelete }: CardType): JSX.Element => {\n    const handleLike = useCallback(() => {\n      onLike(id)\n    }, [id, onLike])\n\n    const handleDelete = useCallback(() => {\n      onDelete(id)\n    }, [id, onDelete])\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.photo}>\n          <img src={url} alt=\"cat\" />\n        </div>\n        <div className={styles.title}>я котик с id = {id}</div>\n        <CardActions\n          liked={liked}\n          onDelete={handleDelete}\n          onLike={handleLike}\n        />\n      </div>\n    )\n  }\n)\n","import axios from 'axios'\nimport { makeAutoObservable, runInAction } from 'mobx'\n\ntype Cat = {\n  url: string\n  id: string\n}\n\nclass CatsStore {\n  private _cats: Cat[] = []\n\n  private _likedCats: string[] = []\n\n  isLoading = false\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  get cats() {\n    return this._cats\n  }\n  get likedCats() {\n    return this._likedCats\n  }\n\n  likeCat = (id: string) => {\n    if (this._likedCats.includes(id)) {\n      this._likedCats = this._likedCats.filter((el) => el !== id)\n    } else {\n      this._likedCats = [...this._likedCats, id]\n    }\n  }\n\n  deleteCat = (id: string) => {\n    this._cats = this.cats.filter((cat) => cat.id !== id)\n  }\n\n  fetchCats = async () => {\n    this.isLoading = true\n    const { data } = await axios.get(`${process.env.REACT_APP_KITTY_URL}`, {\n      params: {\n        limit: 9,\n      },\n      headers: {\n        'x-api-key': `${process.env.REACT_APP_X_API_KEY}`,\n      },\n    })\n    if (data) {\n      runInAction(() => {\n        this.isLoading = false\n        this._cats = data.map((el: Cat) => ({ url: el.url, id: el.id }))\n      })\n    }\n  }\n}\n\nexport const catsStore = new CatsStore()\n","import classnames from 'classnames'\nimport React, { memo } from 'react'\nimport styles from './LikedButton.module.scss'\n\ntype LikedButtonType = {\n  likedToggle: boolean\n  selectLiked: () => void\n}\n\nexport const LikedButton = memo(\n  ({ likedToggle, selectLiked }: LikedButtonType) => {\n    return (\n      <div\n        className={classnames(styles.liked, { [styles.active]: likedToggle })}\n        onClick={selectLiked}\n      >\n        Только понравившиеся котики\n      </div>\n    )\n  }\n)\n","import { LoadingOutlined } from '@ant-design/icons'\nimport { observer } from 'mobx-react'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Card } from '..'\nimport { catsStore } from '../../stores'\nimport { LikedButton } from './LikedButton'\nimport styles from './Main.module.scss'\n\nexport const Main = observer((): JSX.Element => {\n  const { fetchCats, cats, likeCat, likedCats, deleteCat, isLoading } =\n    catsStore\n\n  const [likedToggle, setLikedToggle] = useState(false)\n\n  const filteredCats = useMemo(() => {\n    return likedToggle ? cats.filter((cat) => likedCats.includes(cat.id)) : cats\n  }, [cats, likedCats, likedToggle])\n\n  useEffect(() => {\n    fetchCats()\n  }, [fetchCats])\n\n  const handleSelectLiked = useCallback(() => {\n    setLikedToggle((v) => !v)\n  }, [])\n\n  const handleLikeCat = useCallback(\n    (id: string) => {\n      likeCat(id)\n    },\n    [likeCat]\n  )\n\n  const handleDeleteCat = useCallback(\n    (id: string) => {\n      deleteCat(id)\n    },\n    [deleteCat]\n  )\n\n  if (isLoading) {\n    return (\n      <div className={styles.loading}>\n        <LoadingOutlined />\n      </div>\n    )\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.topBar}>\n        <LikedButton\n          likedToggle={likedToggle}\n          selectLiked={handleSelectLiked}\n        />\n      </div>\n      <div className={styles.cardsContainer}>\n        {filteredCats.map((cat) => (\n          <Card\n            key={cat.id}\n            url={cat.url}\n            id={cat.id}\n            liked={likedCats.includes(cat.id)}\n            onLike={handleLikeCat}\n            onDelete={handleDeleteCat}\n          />\n        ))}\n      </div>\n    </div>\n  )\n})\n","import React from 'react'\nimport { Main } from './components/Main'\n\nfunction App() {\n  return <Main />\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"CardActions_actions__1FK-O\",\"likeIcon\":\"CardActions_likeIcon__2DO1l\",\"icon\":\"CardActions_icon__1wugV\"};"],"sourceRoot":""}